apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: "2025.6.4"
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: authentik
      interval: 12h
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    authentik:
      secret_key: "${SECRET_KEY}"
      error_reporting:
        enabled: true
      postgresql:
        host: "10.10.0.2"
        port: 5432
        name: "authentik"
        user: "authentik_user"
        password: "${POSTGRES_PASSWORD}"
        use_pgbouncer: false
      redis:
        host: "authentik-redis-master"
        password: ""
    
    postgresql:
      enabled: false
    
    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: false
      master:
        persistence:
          enabled: false
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
    
    server:
      name: server
      replicas: 1
      image:
        repository: ghcr.io/goauthentik/server
        tag: "2025.6.4"
        pullPolicy: IfNotPresent
      
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 2Gi
      
      nodeSelector:
        kubernetes.io/arch: arm64
      
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values: ["k3s-worker2"]
      
      tolerations: []
      
      env:
        - name: AUTHENTIK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: authentik-credentials
              key: secret_key
        - name: AUTHENTIK_POSTGRESQL__HOST
          value: "10.10.0.2"
        - name: AUTHENTIK_POSTGRESQL__NAME
          value: "authentik"
        - name: AUTHENTIK_POSTGRESQL__USER
          value: "authentik_user"
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-credentials
              key: postgres_password
        - name: AUTHENTIK_REDIS__HOST
          value: "authentik-redis-master"
      
      volumes: []
      volumeMounts: []
    
    worker:
      name: worker
      replicas: 1
      image:
        repository: ghcr.io/goauthentik/server
        tag: "2025.6.4"
        pullPolicy: IfNotPresent
      
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 500m
          memory: 1Gi
      
      nodeSelector:
        kubernetes.io/arch: arm64
      
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values: ["k3s-worker2"]
    
    service:
      enabled: true
      type: ClusterIP
      port: 80
      name: http
      protocol: TCP
      annotations: {}
    
    ingress:
      enabled: false
    
    serviceAccount:
      create: true
      annotations: {}
      name: ""
    
    persistence:
      enabled: true
      storageClass: ""
      accessMode: ReadWriteOnce
      size: 1Gi
      annotations: {}
  
  valuesFrom:
    - kind: Secret
      name: authentik-credentials
      valuesKey: secret_key
      targetPath: authentik.secret_key
    - kind: Secret
      name: authentik-credentials  
      valuesKey: postgres_password
      targetPath: authentik.postgresql.password