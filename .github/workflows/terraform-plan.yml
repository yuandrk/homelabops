name: Terraform Plan

on:
  pull_request:
    branches: [main]
    paths:
      - 'terraform/live/**'
      - 'terraform/modules/**'
      - '.github/workflows/terraform-plan.yml'
  workflow_dispatch:  # Manual trigger for testing

permissions:
  contents: read
  id-token: write
  pull-requests: write
  actions: read

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    strategy:
      fail-fast: false
      matrix:
        root:
          - cloudflare
          - fluxcd
          # aws-bootstrap and aws-oidc are managed separately (bootstrap)

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Show AWS caller identity
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: "1.13.3"

      - name: Install TFLint
        uses: terraform-linters/setup-tflint@v6.1.0
        with:
          cache: true

      - name: TFLint Init
        working-directory: terraform/live/homelab/${{ matrix.root }}
        run: |
          tflint --init

      - name: TFLint
        working-directory: terraform/live/homelab/${{ matrix.root }}
        run: |
          tflint -f compact
        continue-on-error: true

      - name: tfsec Security Scan
        if: ${{ always() }}
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: terraform/live/homelab/${{ matrix.root }}
          soft_fail: true

      - name: Terraform Init
        working-directory: terraform/live/homelab/${{ matrix.root }}
        run: terraform init -backend-config=backend.hcl

      - name: Terraform Format Check
        working-directory: terraform/live/homelab/${{ matrix.root }}
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Validate
        working-directory: terraform/live/homelab/${{ matrix.root }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform/live/homelab/${{ matrix.root }}
        run: terraform plan -no-color -out=plan.tfplan
        continue-on-error: true

      - name: Save plan artifact
        if: steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: plan-${{ matrix.root }}
          path: terraform/live/homelab/${{ matrix.root }}/plan.tfplan
          retention-days: 5

      - name: Comment PR with plan summary
        if: github.event_name == 'pull_request' && steps.plan.outcome == 'success'
        uses: actions/github-script@v7
        env:
          ROOT_DIR: terraform/live/homelab/${{ matrix.root }}
          MATRIX_ROOT: ${{ matrix.root }}
        with:
          script: |
            const { execSync } = require('child_process');

            const cwd = process.env.ROOT_DIR;
            const planOutput = execSync('terraform show -no-color plan.tfplan', { cwd, encoding: 'utf-8' });

            const truncated = planOutput.length > 60000
              ? planOutput.substring(0, 60000) + '\n...(truncated)'
              : planOutput;

            const body = `### Terraform Plan: \`${process.env.MATRIX_ROOT}\`

            <details>
            <summary>Show Plan Output</summary>

            \`\`\`terraform
            ${truncated}
            \`\`\`

            </details>

            **Artifact:** \`plan-${process.env.MATRIX_ROOT}\`
            **Status:** success`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
