name: Terraform Plan (cloudflare only)

on:
  pull_request:
    branches: [main]
    paths:
      - 'terraform/live/homelab/cloudflare/**'
      - 'terraform/modules/**'
      - '.github/workflows/terraform-plan.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write
  pull-requests: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: "1.13.3"

      - name: Terraform Init
        working-directory: terraform/live/homelab/cloudflare
        run: terraform init -backend-config=backend.hcl

      - name: Terraform Validate
        working-directory: terraform/live/homelab/cloudflare
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: terraform/live/homelab/cloudflare
        run: terraform plan -no-color -out=plan.tfplan

      - name: Upload plan artifact
        if: steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: plan-cloudflare
          path: terraform/live/homelab/cloudflare/plan.tfplan
          retention-days: 5

      - name: Comment PR with plan summary
        if: github.event_name == 'pull_request' && steps.plan.outcome == 'success'
        uses: actions/github-script@v7
        env:
          ROOT_DIR: terraform/live/homelab/cloudflare
        with:
          script: |
            const { execSync } = require('child_process');
            const out = execSync('terraform show -no-color plan.tfplan', { cwd: process.env.ROOT_DIR, encoding: 'utf-8' });
            const truncated = out.length > 60000 ? out.slice(0,60000) + '\n...(truncated)' : out;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `### Terraform Plan: \`cloudflare\`\n\n<details><summary>Show Plan Output</summary>\n\n\`\`\`terraform\n${truncated}\n\`\`\`\n</details>\n\n**Artifact:** \`plan-cloudflare\``
            });
